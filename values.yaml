---
# For the database init, replicaCount must be set to 1
# You can scale once the DB initialized
replicaCount: 1
image:
  repository: passbolt/passbolt
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "3.12.0-3-pro"
passbolt:
  persistence:
    enabled: true
    ## passbolt application Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    # storageClass: "-"
    accessMode: ReadWriteMany
    size: 1Gi
  firstAdmin:
    email: admin@domain.tld
    name: "Admin"
    surname: "Passbolt"
  config:
    php:
      max_execution_time: 300
      memory_limit: "512M"
      post_max_size: "24M"
      upload_max_filesize: "24M"
      # pm_value can be static, dynamic or ondemand 
      pm_value: dynamic
      pm:
        max_children: 40
        start_servers: 16
        min_spare_servers: 8
        max_spare_servers: 24
        process_idle_timeout: "10s"
        max_requests: 500
      session:
        # Session liftime in seconds
        lifetime: 3600
        redis:
          enabled: false
    salt: "your salt"
    gpgServerKeyFingerprint: ""
    # serverkey_private:
    # serverkey:
    # jwtkey:
    # jwtcert:
    license:
      enabled: false
      # key:
    plugins:
      exportenabled: true
      importenabled: true
      ssoenabled: true
    email:
      enabled: false
      from: you@localhost
      from_name: "Your sender name"
      host: localhost
      port: 25
      tls: false
      timeout: 30
      username: username
      password: password
    livenessProbe:
      failureThreshold: 3
      successThreshold: 1
      periodSeconds: 10
      initialDelaySeconds: 30
      timeoutSeconds: 10
    readinessProbe:
      failureThreshold: 20
      successThreshold: 1
      periodSeconds: 3
      initialDelaySeconds: 3
      timeoutSeconds: 10
    security:
      # Needs to be disabled because of Ingress/LoadBalancer IP mismatch
      userip: true
      # If disabled, no additional prompt pops up when logging in using SSO
      ssosecurityprompt: true

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}


mariadb:
  enabled: true
  ## @param architecture MariaDB architecture (`standalone` or `replication`)
  architecture: standalone
  auth:
    rootPassword: "passboltmariadbrootpassword"
    database: "passboltmariadb"
    username: "passboltmariadbuser"
    password: "passboltmariadbpassword"

mariadb-galera:
  enabled: false
  rootUser:
    password: "passboltgalerarootpassword"
  galera:  
    mariabackup:
      password: "passboltgaleramariabackuppassword"
  db:
    user: "passboltgalerauser"
    password: "passboltgalerapassword"
    name: "passboltgaleradb"

redis:
  enabled: false
  sentinel:
    enabled: true
    getMasterTimeout: 1
    automateClusterRecovery: true
  auth:
    password: "redispassword"

redis-cluster:
  enabled: false
  password: "redisclusterpassword"

passbolt-ha-monitor:
  enabled: false
  redisCliAuth: "redispassword"

# Service
service:
  type: ClusterIP
  port: 80

podDisruptionBudget:
  enabled: false
  rule:
    type: minAvailable
    value: 1

ingress:
  enabled: true
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  host: localhost
  scheme: https
  paths:
    - path: /
      pathType: ImplementationSpecific

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
